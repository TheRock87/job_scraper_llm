name: Job Processing

on:
  workflow_dispatch:
    inputs:
      force_process:
        description: 'Force process all jobs'
        required: false
        default: false
        type: boolean
  schedule:
    - cron: '0 9 * * *'
  push:
    paths:
      - 'job_filter_app/jobs_raw.csv'
    branches:
      - main

permissions:
  contents: write

jobs:
  process-jobs:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas pyyaml requests beautifulsoup4 numpy pydantic markdownify tls-client urllib3 regex
    
    - name: Scrape jobs
      run: |
        cd job_filter_app
        python scraper_only.py
    
    - name: Process jobs
      id: process-jobs
      run: |
        cd job_filter_app
        python github_actions_workflow.py
      env:
        CSV_FILE: jobs_raw.csv
        HISTORY_FILE: job_history.json
        OUTPUT_DIR: processed_jobs
    
    - name: Show results
      run: |
        echo "New jobs: ${{ steps.process-jobs.outputs.new_jobs_count }}"
        echo "Total jobs: ${{ steps.process-jobs.outputs.total_jobs_count }}"
        echo "Has new jobs: ${{ steps.process-jobs.outputs.has_new_jobs }}"
    
    - name: Skip if no new jobs
      if: steps.process-jobs.outputs.has_new_jobs != 'true' && github.event.inputs.force_process != 'true'
      run: |
        echo "No new jobs found, skipping"
        exit 0
    
    - name: Upload artifacts
      if: steps.process-jobs.outputs.has_new_jobs == 'true' || github.event.inputs.force_process == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: job-results
        path: |
          job_filter_app/processed_jobs/
          job_filter_app/job_history.json
        retention-days: 30
    
    - name: Setup rclone
      if: steps.process-jobs.outputs.has_new_jobs == 'true' || github.event.inputs.force_process == 'true'
      run: |
        curl https://rclone.org/install.sh | sudo bash
        mkdir -p ~/.config/rclone
        cat > ~/.config/rclone/rclone.conf << EOF
        [gdrive]
        type = drive
        scope = drive
        token = 
        EOF
    
    - name: Test rclone
      if: steps.process-jobs.outputs.has_new_jobs == 'true' || github.event.inputs.force_process == 'true'
      run: |
        echo "Testing rclone..."
        rclone about gdrive:
        rclone ls gdrive:/
      env:
        RCLONE_CONFIG: ${{ secrets.RCLONE_CONFIG }}

    - name: Upload to Drive
      if: steps.process-jobs.outputs.has_new_jobs == 'true' || github.event.inputs.force_process == 'true'
      run: |
        cd job_filter_app
        if [ -f "processed_jobs/processed_jobs.csv" ]; then
          rclone copy processed_jobs/processed_jobs.csv gdrive:AI-Jobs/ --progress
        fi
        if [ -f "processed_jobs/processing_summary.json" ]; then
          rclone copy processed_jobs/processing_summary.json gdrive:AI-Jobs/ --progress
        fi
      env:
        RCLONE_CONFIG: ${{ secrets.RCLONE_CONFIG }}

    - name: List Drive files
      if: steps.process-jobs.outputs.has_new_jobs == 'true' || github.event.inputs.force_process == 'true'
      run: |
        rclone ls gdrive:AI-Jobs/
      env:
        RCLONE_CONFIG: ${{ secrets.RCLONE_CONFIG }}

    - name: Commit history
      if: steps.process-jobs.outputs.has_new_jobs == 'true' || github.event.inputs.force_process == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add job_filter_app/job_history.json
        git commit -m "Update job history" || echo "No changes"
        git push 